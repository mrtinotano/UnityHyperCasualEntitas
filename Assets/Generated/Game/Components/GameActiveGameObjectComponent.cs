//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JewelsExplosion.Game.ActiveGameObjectComponent activeGameObject { get { return (JewelsExplosion.Game.ActiveGameObjectComponent)GetComponent(GameComponentsLookup.ActiveGameObject); } }
    public bool hasActiveGameObject { get { return HasComponent(GameComponentsLookup.ActiveGameObject); } }

    public void AddActiveGameObject(bool newIsActive) {
        var index = GameComponentsLookup.ActiveGameObject;
        var component = (JewelsExplosion.Game.ActiveGameObjectComponent)CreateComponent(index, typeof(JewelsExplosion.Game.ActiveGameObjectComponent));
        component.IsActive = newIsActive;
        AddComponent(index, component);
    }

    public void ReplaceActiveGameObject(bool newIsActive) {
        var index = GameComponentsLookup.ActiveGameObject;
        var component = (JewelsExplosion.Game.ActiveGameObjectComponent)CreateComponent(index, typeof(JewelsExplosion.Game.ActiveGameObjectComponent));
        component.IsActive = newIsActive;
        ReplaceComponent(index, component);
    }

    public void RemoveActiveGameObject() {
        RemoveComponent(GameComponentsLookup.ActiveGameObject);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActiveGameObject;

    public static Entitas.IMatcher<GameEntity> ActiveGameObject {
        get {
            if (_matcherActiveGameObject == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActiveGameObject);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActiveGameObject = matcher;
            }

            return _matcherActiveGameObject;
        }
    }
}
