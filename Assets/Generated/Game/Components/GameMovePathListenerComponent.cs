//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MovePathListenerComponent movePathListener { get { return (MovePathListenerComponent)GetComponent(GameComponentsLookup.MovePathListener); } }
    public bool hasMovePathListener { get { return HasComponent(GameComponentsLookup.MovePathListener); } }

    public void AddMovePathListener(System.Collections.Generic.List<IMovePathListener> newValue) {
        var index = GameComponentsLookup.MovePathListener;
        var component = (MovePathListenerComponent)CreateComponent(index, typeof(MovePathListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMovePathListener(System.Collections.Generic.List<IMovePathListener> newValue) {
        var index = GameComponentsLookup.MovePathListener;
        var component = (MovePathListenerComponent)CreateComponent(index, typeof(MovePathListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMovePathListener() {
        RemoveComponent(GameComponentsLookup.MovePathListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovePathListener;

    public static Entitas.IMatcher<GameEntity> MovePathListener {
        get {
            if (_matcherMovePathListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovePathListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovePathListener = matcher;
            }

            return _matcherMovePathListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMovePathListener(IMovePathListener value) {
        var listeners = hasMovePathListener
            ? movePathListener.value
            : new System.Collections.Generic.List<IMovePathListener>();
        listeners.Add(value);
        ReplaceMovePathListener(listeners);
    }

    public void RemoveMovePathListener(IMovePathListener value, bool removeComponentWhenEmpty = true) {
        var listeners = movePathListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMovePathListener();
        } else {
            ReplaceMovePathListener(listeners);
        }
    }
}
