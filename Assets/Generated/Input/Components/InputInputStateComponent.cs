//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity inputStateEntity { get { return GetGroup(InputMatcher.InputState).GetSingleEntity(); } }
    public HyperCasual.Input.InputStateComponent inputState { get { return inputStateEntity.inputState; } }
    public bool hasInputState { get { return inputStateEntity != null; } }

    public InputEntity SetInputState(HyperCasual.Input.InputStateComponent.InputState newCurrentInputState) {
        if (hasInputState) {
            throw new Entitas.EntitasException("Could not set InputState!\n" + this + " already has an entity with HyperCasual.Input.InputStateComponent!",
                "You should check if the context already has a inputStateEntity before setting it or use context.ReplaceInputState().");
        }
        var entity = CreateEntity();
        entity.AddInputState(newCurrentInputState);
        return entity;
    }

    public void ReplaceInputState(HyperCasual.Input.InputStateComponent.InputState newCurrentInputState) {
        var entity = inputStateEntity;
        if (entity == null) {
            entity = SetInputState(newCurrentInputState);
        } else {
            entity.ReplaceInputState(newCurrentInputState);
        }
    }

    public void RemoveInputState() {
        inputStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public HyperCasual.Input.InputStateComponent inputState { get { return (HyperCasual.Input.InputStateComponent)GetComponent(InputComponentsLookup.InputState); } }
    public bool hasInputState { get { return HasComponent(InputComponentsLookup.InputState); } }

    public void AddInputState(HyperCasual.Input.InputStateComponent.InputState newCurrentInputState) {
        var index = InputComponentsLookup.InputState;
        var component = (HyperCasual.Input.InputStateComponent)CreateComponent(index, typeof(HyperCasual.Input.InputStateComponent));
        component.CurrentInputState = newCurrentInputState;
        AddComponent(index, component);
    }

    public void ReplaceInputState(HyperCasual.Input.InputStateComponent.InputState newCurrentInputState) {
        var index = InputComponentsLookup.InputState;
        var component = (HyperCasual.Input.InputStateComponent)CreateComponent(index, typeof(HyperCasual.Input.InputStateComponent));
        component.CurrentInputState = newCurrentInputState;
        ReplaceComponent(index, component);
    }

    public void RemoveInputState() {
        RemoveComponent(InputComponentsLookup.InputState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputState;

    public static Entitas.IMatcher<InputEntity> InputState {
        get {
            if (_matcherInputState == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputState);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputState = matcher;
            }

            return _matcherInputState;
        }
    }
}
